package keeper

import (
	"testing"

	"github.com/cosmos/cosmos-sdk/simapp"
	"github.com/okp4/okp4d/app"
	. "github.com/smartystreets/goconvey/convey"
	abci "github.com/tendermint/tendermint/abci/types"
	"github.com/tendermint/tendermint/libs/log"
	dbm "github.com/tendermint/tm-db"
)

func TestBozo(t *testing.T) {
	Convey("TBD", t, func() {
		db := dbm.NewMemDB()
		encodingConfig := app.MakeEncodingConfig()
		theApp := app.New(log.NewNopLogger(), db, nil, true, map[int64]bool{}, app.DefaultNodeHome, 5, encodingConfig, simapp.EmptyAppOptions{})

		if !isCheckTx {
			genesisState := app.NewDefaultGenesisState(encodingConfig)
			stateBytes, err := json.MarshalIndent(genesisState, "", " ")
			if err != nil {
				panic(err)
			}

			app.InitChain(
				abci.RequestInitChain{
					Validators:      []abci.ValidatorUpdate{},
					ConsensusParams: simapp.DefaultConsensusParams,
					AppStateBytes:   stateBytes,
				},
			)
		}
	})
}
