name: Publish

on:
  push:
    branches: [ main ]
    tags: ["v*"]

  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  publish-docker-images:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Login to Docker registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_REGISTRY_ID }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - name: Set up context
        id: project_context
        uses: FranzDiebold/github-env-vars-action@v2.3.1

      - name: Set up versions
        id: project_version
        run: |
          version=`head -n 1 version`
          echo "::set-output name=version::$version"
          echo "::set-output name=major::$(echo $version | cut -d. -f1)"
          echo "::set-output name=minor::$(echo $version | cut -d. -f2)"
          echo "::set-output name=revision::$(echo $version | cut -d. -f3)"
          echo "::set-output name=image::$GITHUB_REPOSITORY"

      - name: Build and publish image(s)
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            echo "Publish docker image for branch"
            docker build \
              -t ghcr.io/${{ steps.project_version.outputs.image }}:${{ steps.project_version.outputs.major }} \
              -t ghcr.io/${{ steps.project_version.outputs.image }}:${{ steps.project_version.outputs.major }}.${{ steps.project_version.outputs.minor }} \
              -t ghcr.io/${{ steps.project_version.outputs.image }}:${{ steps.project_version.outputs.version }} \
              -t ghcr.io/${{ steps.project_version.outputs.image }}:latest \
              .
          elif [[ $GITHUB_EVENT_NAME == pull_request ]]; then
            echo "Publish docker image for branch"
            docker build \
              -t ghcr.io/${{ steps.project_version.outputs.image }}:$CI_ACTION_REF_NAME_SLUG \
              .
          else
            echo "Publish docker image for nightly"
            docker build \
              -t ghcr.io/${{ steps.project_version.outputs.image }}:nightly \
              .
          fi
          docker push ghcr.io/${{ steps.project_version.outputs.image }} --all-tags
